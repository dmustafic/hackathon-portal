{
  "id": "2.12.24-gift",
  "docNumber": "2.12.24",
  "name": "Gift",
  "description": "This operation performs a user purchase as a gift. The MSDP selects a product based on the specified premium resource type. The gift output can be a ticket with limited or unlimited usage.",
  "categories": ["know-driver"],
  "subCategories": [],
  "resourceTable": {
    "Route": "/content/v1/commerce/gift/{senderURI}",
    "HTTP Verb": ["POST"],
    "Authentication": "Basic Authentication"
  },
  "parameters": {
    "route": {
      "senderURI": "Represents the user identity in the following format: 'id:<userid>' or 'msisdn:<number>'."
    },
    "requestBody": [
      {
        "key": "appId",
        "type": "String",
        "required": false,
        "description": "Optional: application making this call."
      },
      {
        "key": "Parameters",
        "type": "JSON",
        "required": false,
        "description": "Parameters format depends on the application domain and operation."
      },
      {
        "key": "Client",
        "type": "JSON",
        "required": false,
        "description": "Client capabilities (deviceId)."
      }
    ],
    "responseBody": [
      {
        "key": "billingId",
        "type": "String",
        "required": false,
        "description": "The ID given by the billing system when a purchase is done."
      },
      {
        "key": "purchaseId",
        "type": "String",
        "required": false,
        "description": "The given ID of a purchase when it is done."
      },
      {
        "key": "purchaseIsDone",
        "type": "Boolean",
        "required": true,
        "description": "Specifies whether the purchase is done. True if a purchase is done, else False."
      },
      {
        "key": "recurrentPurchaseId",
        "type": "String",
        "required": false,
        "description": "The ID for the recurrent purchase given that one has been purchased."
      },
      {
        "key": "statusCode",
        "type": "Integer",
        "required": true,
        "description": "Status code for the operation. 0 for success (see error code table otherwise)."
      },
      {
        "key": "unlimitedTicketUsed",
        "type": "Boolean",
        "required": true,
        "description": "Specifies whether the ticket is unlimited to be used. True if the ticket is unlimited to be used, else False."
      },
      {
        "key": "ticketConsumed",
        "type": "Boolean",
        "required": true,
        "description": "Specifies whether the ticket is consumed. True if the ticket is consumed, else False."
      },
      {
        "key": "transactionId",
        "type": "String",
        "required": false,
        "description": "The ID of the transaction."
      },
      {
        "key": "billingErrorInformation",
        "type": "JSON",
        "required": false,
        "description": "Billing error information"
      }
    ]
  },
  "bodyParameterFormats": {
    "request": {
      "Parameters": [
        {
          "key": "receiverURI",
          "type": "String",
          "required": true,
          "description": "The recieverURI element uniquely identifies the receiver. It must always have one of the two following formats: msisdn:<msisdn> or id:<userid> where <msisdn> is the MSISDN number and <userid> is the identifier associated with the receiver, respectively."
        },
        {
          "key": "serviceId",
          "type": "String",
          "required": true,
          "description": "The requester's service id."
        },
        {
          "key": "premiumResourceType",
          "type": "String",
          "required": true,
          "description": "The premium resource type."
        },
        {
          "key": "serviceURL",
          "type": "String",
          "required": true,
          "description": "The serviceURL element specifies the URL through which the receiver can reach the service."
        },
        {
          "key": "ruleProperties",
          "type": "JSON",
          "required": false,
          "description": "Properties used for product and price selection."
        },
        {
          "key": "purchaseMetas",
          "type": "JSON",
          "required": false,
          "description": "Meta data that is stored if a purchase is done (list of meta)."
        },
        {
          "key": "billingMetas",
          "type": "JSON",
          "required": false,
          "description": "Meta data passed to the billing implementation. The charging operation in ParlayX payment interface is configurable by setting the value of billing-meta:do ChargeFlag key. If the value is set to true, the chargeAmount method in the ParlayX payment interface is used. If the value is set to false, the reserveAmount and chargeReservation methods in ParlayX payment interface are used."
        },
        {
          "key": "premiumTransactionMetas",
          "type": "JSON",
          "required": false,
          "description": "Meta data passed to the premium transaction."
        },
        {
          "key": "messageMetas",
          "type": "JSON",
          "required": false,
          "description": "Meta data that contains the message and language description. The applicable keys are as follows:\n- message: The message that is sent to a friend.\n- descriptionLanguage: The language that is used to send the message. For example, en, fr, fr_CA."
        }
      ],
      "Product": [
        {
          "key": "description",
          "type": "String",
          "required": false,
          "description": "The product description."
        },
        {
          "key": "price",
          "type": "JSON",
          "required": false,
          "description": "The product price information."
        },
        {
          "key": "productId",
          "type": "String",
          "required": true,
          "description": "The product ID."
        },
        {
          "key": "tickets",
          "type": "JSON",
          "required": false,
          "description": "The tickets information."
        }
      ],
      "Price": [
        {
          "key": "currencyCode",
          "type": "String",
          "required": false,
          "description": "The currency code."
        },
        {
          "key": "price",
          "type": "Long",
          "required": true,
          "description": "The price."
        }
      ],
      "Tickets": [
        {
          "key": "description",
          "type": "String",
          "required": false,
          "description": "The description."
        },
        {
          "key": "meta",
          "type": "JSON",
          "required": false,
          "description": "Meta data of the ticket (List of meta)"
        },
        {
          "key": "expirationTime",
          "type": "JSON",
          "required": false,
          "description": "The expiration time."
        },
        {
          "key": "premiumResourceType",
          "type": "String",
          "required": false,
          "description": "The premium resource type."
        },
        {
          "key": "usageUnlimited",
          "type": "Boolean",
          "required": true,
          "description": "Specifies whether the ticket is unlimited to be used. True if the ticket is unlimited to be used, else False."
        },
        {
          "key": "count",
          "type": "Integer",
          "required": false,
          "description": "The number of total usages in the defined ticket."
        }
      ],
      "expirationTime": [
        {
          "key": "absolute",
          "type": "String",
          "required": true,
          "description": "The exact time when the ticket will be expired."
        },
        {
          "key": "relative",
          "type": "Long",
          "required": true,
          "description": "The duration that the ticket will be expired. For example, if the value is set to 100, the ticket will be expired after 100 second."
        }
      ]
    },
    "response": {
      "billingErrorInformation": [
        {
          "key": "errorCode",
          "type": "String",
          "required": true,
          "description": "Error code that indicates the billing error."
        },
        {
          "key": "errorMessage",
          "type": "String",
          "required": false,
          "description": "The accompanying message description for the error code."
        },
        {
          "key": "variables",
          "type": "String",
          "required": false,
          "description": "Additional information returned from external charging system."
        }
      ]
    }
  },
  "errors": [
    400,
    401,
    403,
    404,
    500
  ],
  "examples": [
    {
      "type": "request",
      "verb": "POST",
      "route": "/content/v1/commerce/gift/msisdn:5143457900",
      "body": {
        "appId": "appStore",
        "parameters": {
          "recieverURI": "msisdn:972555444",
          "serviceId": "S-123455",
          "premiumResourceType": "HTML5",
          "serviceURL": "~URL~"
        },
        "Client": {
          "deviceId": "IMX"
        }
      }
    },
    {
      "type": "response",
      "body": {
        "billingId": "~billingId~",
        "purchaseId": "~purchaseId~",
        "associatedPurchaseId": "~Id~",
        "purchaseIsdone": true,
        "recurrentPurchaseId": "~recurrentPurchaseId~",
        "statusCode": 0,
        "unlimitedTicketUsed": true,
        "ticketConsumed": true,
        "transactionId": "~transactionId~",
        "billingErrorInformation": null
      }
    }
  ],
  "codeExamples": {
    "android": "/app/src/com/idean/atthack/network/RequestHelper.java",
    "ios": "/data/examples/ios/examples.m",
    "web": "/dist/data/web-examples.js"
  }
}
